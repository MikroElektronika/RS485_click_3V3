'
'Example for RS485_3v3 Click
'
'    Date          : maj 2018.
'    Author        : Katarina Perendic
'
'Test configuration PIC :
'    
'    MCU             : P18F87K22
'    Dev. Board      : EasyPIC PRO v7
'    PIC Compiler ver : v7.2.0.0
'
'---
'
'Description :
'
'The application is composed of three sections :
'
'- System Initialization - Intializes UART module
'- Application Initialization - Driver intialization
'- Application Task - (code snippet) - Checks if new data byte have received in rx buffer (ready for reading),
'  and if ready than reads one byte from rx buffer. In second case aplication task writes
'  message data via UART.
'
'
program Click_RS485_3v3_PIC

include Click_RS485_3v3_types
include Click_RS485_3v3_config

const
    MESSAGE_DATA as uint8_t[9] = ("M", "i", "k", "r", "o", "E", 13, 10, 0)
    
sub procedure systemInit() 

    mikrobus_gpioInit(_MIKROBUS1, _MIKROBUS_PWM_PIN, _GPIO_OUTPUT) 
    mikrobus_uartInit(_MIKROBUS1, @_RS485_UART_CFG[0]) 
    mikrobus_logInit(_LOG_USBUART, 9600) 
    Delay_ms(100) 

end sub

sub procedure applicationInit() 

    rs485_uartDriverInit(T_RS485_P(@_MIKROBUS1_GPIO), T_RS485_P(@_MIKROBUS1_UART)) 
    mikrobus_logWrite("Initialized", _LOG_LINE) 
    Delay_ms(100) 

end sub

sub procedure applicationTask() 
dim
    tmp as char
    rdyFlag as uint8_t

    rdyFlag = rs485_byteReady() 
    if ((1 = rdyFlag)) then 
        tmp = rs485_readByte() 
        mikrobus_logWrite(@tmp, _LOG_BYTE) 
    end if
'    for tmp = 0 to 9-1
'        rs485_writeByte(MESSAGE_DATA[tmp]) 
'        mikrobus_logWrite("MESSAGE SENT", _LOG_LINE) 
'    next tmp
'    Delay_ms(2000) 

end sub

main :

    systemInit() 
    applicationInit() 
    while (1) 
        applicationTask() 
    wend

end.