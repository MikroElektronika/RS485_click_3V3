{*
Example for RS485_3v3 Click

    Date          : maj 2018.
    Author        : Katarina Perendic

Test configuration CEC :
    
    MCU              : CEC1702
    Dev. Board       : Clicker 2 for CEC1702
    ARM Compiler ver : v6.0.0.0

---

Description :

The application is composed of three sections :

- System Initialization - Intializes UART module
- Application Initialization - Driver intialization
- Application Task - (code snippet) - Checks if new data byte have received in rx buffer (ready for reading),
  and if ready than reads one byte from rx buffer. In second case aplication task writes
  message data via UART.

*}
program Click_RS485_3v3_CEC;

uses Click_RS485_3v3_types, Click_RS485_3v3_config;

const
    MESSAGE_DATA : array[9] of uint8_t = ('M', 'i', 'k', 'r', 'o', 'E', 13, 10, 0); 
    
procedure systemInit(); 
begin

    mikrobus_gpioInit(_MIKROBUS1, _MIKROBUS_PWM_PIN, _GPIO_OUTPUT); 
    mikrobus_uartInit(_MIKROBUS1, @_RS485_UART_CFG[0]); 
    mikrobus_logInit(_MIKROBUS2, 9600); 
    Delay_ms(100); 

end;

procedure applicationInit(); 
begin

    rs485_uartDriverInit(T_RS485_P(@_MIKROBUS1_GPIO), T_RS485_P(@_MIKROBUS1_UART)); 
    mikrobus_logWrite('Initialized', _LOG_LINE); 
    Delay_ms(100); 

end;

procedure applicationTask(); 
var
    tmp : char;
    rdyFlag : uint8_t;
begin

    rdyFlag := rs485_byteReady(); 
    if ((1 = rdyFlag)) then 
    begin
        tmp := rs485_readByte(); 
        mikrobus_logWrite(@tmp, _LOG_BYTE); 
    end; 
{*
    for tmp := 0 to 9-1 do 
    begin
        rs485_writeByte(MESSAGE_DATA[tmp]); 
        mikrobus_logWrite('MESSAGE SENT', _LOG_LINE); 
    end;
    Delay_ms(2000); 
*}

end;

begin

    systemInit(); 
    applicationInit(); 
    while (1) do 
    begin 
        applicationTask(); 
    end;

end.